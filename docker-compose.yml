services:
    #php service
    example_app:
        depends_on:
            - example_mysql
        build:
            args:
                user: example_app_user
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: example_app_image
        ports:
            - "9000:9000"  # Maps host port 9000 to container port 9000
        container_name: example_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/:/etc/nginx/conf.d
        networks:
            - example_app_network
    #nginx service
    example_webserver:
        image: nginx:alpine
        container_name: example_webserver_container
        restart: unless-stopped
        depends_on:
            -   example_app
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/:/etc/nginx/conf.d
        networks:
        - example_app_network
    #mysql service
    example_mysql:
        image: mysql:9.1.0
        container_name: example_mysql_container

        ports:
            - "${DB_PORT}:${CONTAINER_DB_PORT}"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE} # use laravel .env variable (.env can be found in the folder root directory)
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - example_mysql_data:/var/lib/mysql
        networks:
            - example_app_network
    #phpmyadmin service
    example_phpmyadmin:
        image: phpmyadmin:latest
        container_name: example_phpmyadmin_container
        restart: unless-stopped
        ports:
            - "8383:80"
        environment:
            PMA_HOST: example_mysql
            PMA_PORT: ${CONTAINER_DB_PORT}
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        networks:
            - example_app_network
        depends_on:
            -   example_mysql
    #redis service
    example_redis:
        image: redis:7.2-alpine
        container_name: example_redis_container
        ports:
            - "${REDIS_PORT}:${CONTAINER_REDIS_PORT}"
volumes:
    example_mysql_data:
        driver: local
networks:
   example_app_network:
      driver: bridge
